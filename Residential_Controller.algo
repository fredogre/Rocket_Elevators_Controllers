SEQUENCE CallElevator (Direction, Floor) 
    CALL ActivateExtButton (Direction, Floor) 
    CALL FindElevator (Direction, Floor) RETURNING Elevator 
    CALL RequestElevator (Elevator, Floor) 
END SEQUENCE

SEQUENCE CallInsideElevator (Elevator, RequestedFloor)  
    CALL ActivateIntButton (Direction, RequestedFloor) 
    CALL RequestElevator (Elevator, RequestedFloor) 
END SEQUENCE

SEQUENCE ActivateExtButton (Direction, Floor)   
    CALL FindExtButton (Direction, Floor) RETURNING button
    SET button Active 
END SEQUENCE

SEQUENCE DeactivateExtButton (Direction, Floor)   
    CALL FindExtButton (Direction, Floor) RETURNING button
    SET button NotActive 
END SEQUENCE

SEQUENCE FindExtButton (Direction, Floor) 
    FOR EACH button IN ExternalButtons 
        IF Floor = ButtonFloor AND Direction = ButtonDirection 
        THEN RETURN button 
        END IF
    END FOR 
END SEQUENCE 

SEQUENCE ActivateIntButton (Elevator, Floor)   
    CALL FindIntButton (Elevator, Floor) RETURNING button
    SET button Active 
END SEQUENCE

SEQUENCE DeactivateIntbutton (Elevator, Floor)   
    CALL FindIntbutton (Elevator, Floor) RETURNING button
    SET button NotActive 
END SEQUENCE

SEQUENCE FindIntbutton (Elevator, Floor) 
    FOR EACH button IN Internalbuttons 
        IF Floor = ButtonFloor AND Elevator = Elevator 
        THEN RETURN button 
        END IF
    END FOR 
END SEQUENCE 

SEQUENCE FindElevator (Direction, Floor)  
    WHILE Elevator NOT Found 
        FOR EACH Elevator IN Elevators 
            IF Floor = ElevatorFloor AND Status Is Stopped AND ElevatorDirection IS Direction THEN
                    RETURN Elevator
                ELSE IF Status IS Idle AND Floor = ElevatorFloor THEN
                    RETURN Elevator   
                ELSE IF Direction IS GoingUp AND ElevatorDirection IS Direction AND Floor > ElevatorFloor THEN 
                    RETURN Elevator 
                ELSE IF Direction IS GoingDown AND ElevatorDirection IS Direction AND Floor < ElevatorFloor THEN 
                    RETURN Elevator 
            END IF 
            END FOR
            READ Elevator with shortest floor list from Elevators
            RETURN Elevator
    END WHILE
END SEQUENCE

SEQUENCE RequestElevator (Elevator, RequestedFloor)                      
    ADD RequestedFloor TO FloorList
    CALL SortFloorList (Floorlist, Direction) RETURNING SortedFloorList
    SET FloorList TO SortedFloorList
    CALL OperateElevator
END SEQUENCE

SEQUENCE OperateElevator (Elevator)                                  
 WHILE SortedFloorList IS NOT Empty                               
    READ RequestedFloor From SortedFloorList 
      IF ElevatorFloor IS RequestedFloor THEN           
        CALL OpenDoor (Elevator)                              
      ELSE IF ElevatorFloor > RequestedFloor THEN    
        CALL MoveDown (Elevator, RequestedFloor)
      ELSE IF ElevatorFloor < RequestedFloor THEN 
        CALL MoveUp (Elevator, RequestedFloor)
      END IF 
 END WHILE                                                  
 CALL ReturnIdle (Elevator, Floor)                               
END SEQUENCE

SEQUENCE SortFloorList (FloorList, Direction) 
    SORT FloorList BY Direction THEN RETURN Floorlist
END SEQUENCE

SEQUENCE OpenDoor (Elevator)
    REPEAT 
        OpenDoor 
        INIT Timer TO 5 Seconds 
    UNTIL Door NOT Obstructed 
    CALL DeactivateButton 
    CALL CloseDoor (Elevator)
END SEQUENCE

SEQUENCE CloseDoor (Elevator)
    IF Door IS Closing AND NOT Obstructed AND NOT Overweight 
    THEN
        CALL RequestElevator                                    
    ELSE 
        CALL OpenDoor (Elevator)
    END IF
END SEQUENCE

SEQUENCE Obstructed
   READ Captor FROM Door
   IF Obstructed 
      RETURN TRUE 
   ELSE RETURN FALSE 
   END IF 
END SEQUENCE 

SEQUENCE Overweight
   READ Weight FROM Balance 
   IF Weight > Max Weight THEN
   RETURN TRUE 
   ELSE RETURN FALSE
   END IF 
END SEQUENCE

SEQUENCE MoveUp(Elevator, RequestedFloor)
    REPEAT 
        MoveUp Elevator
        COMPUTE ElevatorFloor = ElevatorFloor + 1 
    UNTIL ElevatorFloor IS RequestedFloor
    CALL OpenDoor
END SEQUENCE

SEQUENCE MoveDown (Elevator, RequestedFloor)
    REPEAT 
        MoveDown Elevator
        COMPUTE ElevatorFloor = ElevatorFloor - 1
    UNTIL ElevatorFloor IS RequestedFloor 
    CALL OpenDoor 
END SEQUENCE

SEQUENCE ReturnIdle (Elevator, Floor)                          
COMPUTE Minimum Floor FROM Elevators
COMPUTE Middle Floor FROM Elevators
 IF TimeOfDay > 15 THEN
    Idle = Minimum Floor
   ELSE IF TimeOfDay < 15 THEN 
    Idle = Middle Floor 
 END IF 
END SEQUENCE 


