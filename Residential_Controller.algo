-----Outside the elevator, what happens when someone presses a button----
SEQUENCE CallElevator (Direction, Floor) 
    CALL ActivateExtButton (Direction, Floor) 
    CALL FindElevator (Direction, Floor) RETURNING Elevator 
    CALL RequestElevator (Elevator, Floor) 
END SEQUENCE

----Inside the elevator, what happens when someone presses a button-----    
SEQUENCE CallInsideElevator (Elevator, RequestedFloor) 
    CALL ActivateIntButton (Direction, RequestedFloor) 
    CALL RequestElevator (Elevator, RequestedFloor) 
END SEQUENCE

-------- Exterior buttons Active or NotActive--------

SEQUENCE ActivateExtButton (Direction, Floor)   
    CALL FindExtButton (Direction, Floor) RETURNING button
    SET button Active 
END SEQUENCE

SEQUENCE DeactivateExtButton (Direction, Floor)   
    CALL FindExtButton (Direction, Floor) RETURNING button
    SET button NotActive 
END SEQUENCE

SEQUENCE FindExtButton (Direction, Floor) 
    FOR EACH button IN ExternalButtons 
        IF Floor = ButtonFloor AND Direction = ButtonDirection 
        THEN RETURN button 
        END IF
    END FOR 
END SEQUENCE 

------ Interior button Active or NotActive -------  

SEQUENCE ActivateIntButton (Elevator, Floor)   
    CALL FindIntButton (Elevator, Floor) RETURNING button
    SET button Active 
END SEQUENCE

SEQUENCE DeactivateIntbutton (Elevator, Floor)   
    CALL FindIntbutton (Elevator, Floor) RETURNING button
    SET button NotActive 
END SEQUENCE

SEQUENCE FindIntbutton (Elevator, Floor) 
    FOR EACH button IN Internalbuttons 
        IF Floor = ButtonFloor AND Elevator = Elevator 
        THEN RETURN button 
        END IF
    END FOR 
        
END SEQUENCE 


----  Is the elevator at the floor where I request it? Is the direction of the elevator where I am going?  -----

SEQUENCE FindElevator (Direction, Floor) 
    WHILE Elevator NOT Found 
        FOR EACH Elevator IN Elevators 
            IF Floor = ElevatorFloor AND Status Is Stopped AND ElevatorDirection is Direction THEN
                    RETURN Elevator
                ELSE IF Status IS Idle AND Floor = ElevatorFloor THEN
                    RETURN Elevator   
                ELSE IF Direction IS GoingUp AND ElevatorDirection IS Direction AND Floor > ElevatorFloor THEN 
                    RETURN Elevator 
                ELSE IF Direction IS GoingDown AND ElevatorDirection IS Direction AND Floor < ElevatorFloor THEN 
                    RETURN Elevator 
            END IF 
         END FOR 


SEQUENCE RequestElevator (Elevator, RequestedFloor)                      
    ADD RequestedFloor TO FloorList
    CALL SortFloorList (Floorlist, Direction) RETURNING SortedFloorList
    SET FloorList TO SortedFloorList
    CALL OperateElevator
END SEQUENCE

SEQUENCE OperateElevator (Elevator)                                  
 WHILE SortedFloorList IS NOT Empty                               ***
    READ RequestedFloor From SortedFloorList 
      IF ElevatorFloor IS RequestedFloor THEN           
        CALL OpenDoor (Elevator)                              
      ELSE IF ElevatorFloor > RequestedFloor THEN    
        CALL MoveDown (Elevator, RequestedFloor)
      ELSE IF ElevatorFloor < RequestedFloor THEN 
        CALL MoveUp (Elevator, RequestedFloor)
      END IF 
 END WHILE                                                   ****
 CALL ReturnIdle (Elevator, Floor)                               ****
END SEQUENCE


SEQUENCE SortFloorList (FloorList, Direction) 
    SORT FloorList BY Direction THEN RETURN Floorlist
END SEQUENCE


--- Open the doors --- 
SEQUENCE OpenDoor (Elevator)
    REPEAT 
        OpenDoor 
        INIT Timer TO 5 Seconds 
    UNTIL Door NOT Obstructed 
    CALL DeactivateButton 
    CALL CloseDoor (Elevator)
    CALL RequestElevator
END SEQUENCE

----- Close the Doors -----
SEQUENCE CloseDoor (Elevator)
    IF Door IS Closing AND NOT Obstructed 
    THEN
        CALL RequestElevator                                    
    ELSE 
        CALL OpenDoor (Elevator)
    END IF
END SEQUENCE


SEQUENCE MoveDown (Elevator, Floor, RequestedFloor)
    REPEAT 
        COMPUTE Floor OR RequestedFloor = ElevatorFloor -1 
    UNTIL ElevatorFloor IS RequestedFloor OR Floor
    CALL RequestElevator
END SEQUENCE


SEQUENCE MoveUp (Elevator, Floor, RequestedFloor)
    REPEAT 
        COMPUTE Floor OR RequestedFloor = ElevatorFloor + 1 
    UNTIL ElevatorFloor IS RequestedFloor OR Floor 
    CALL RequestElevator
END SEQUENCE 

SEQUENCE ReturnIdle (TimeOfDay, Floor)                          ****** 
 IF TimeOfDay > 15 THEN
    Idle = MINIMUM Floor
   ELSE IF TimeOfDay < 15 THEN 
    Idle = AVERAGE Floor 
 END IF 

