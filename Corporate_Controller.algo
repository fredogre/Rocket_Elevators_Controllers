SEQUENCE CallElevator (Direction, Floor) 
    CALL ActivateExtButton (Direction, Floor) 
    CALL FindElevator (Direction, Floor) RETURNING Elevator 
    CALL RequestElevator (Elevator, Floor) 
END SEQUENCE

SEQUENCE ReturningElevator(Elevator, Floor)
    CALL FindElevator (Goingdown, Floor) RETURNING Elevator
    CALL RequestElevator (Elevator, Floor)
END SEQUENCE

SEQUENCE ActivateExtButton (Direction, Floor)   
    CALL FindExtButton (Direction, Floor) RETURNING button
    SET button Active 
END SEQUENCE

SEQUENCE DeactivateExtButton (Direction, Floor)   
    CALL FindExtButton (Direction, Floor) RETURNING button
    SET button NotActive 
END SEQUENCE

SEQUENCE FindExtButton (Direction, Floor) 
    FOR EACH button IN ExternalButtons 
        IF Floor = ButtonFloor AND Direction = ButtonDirection THEN
            RETURN button 
        END IF
    END FOR 
END SEQUENCE 

SEQUENCE FindElevator (Direction, Floor)  
   CASE Floor 
   IS Less than 2:
    RETURN Elevator FROM CALL SubLevelsElevator(Column1) RETURNING Elevator
   END CASE 

   CASE Floor 
   IS Greater Than 0 AND less than 21:
    RETURN Elevator FROM CALL RetrieveElevator(Column2) RETURNING Elevator
   END CASE 

   CASE Floor
   IS Greater Than 19 AND Less Than 41: 
    RETURN Elevator FROM CALL RetrieveElevator(Column3) RETURNING Elevator
   END CASE

   CASE Floor 
   IS Greater Than 39 AND LESS Than 61: 
    RETURN Elevator FROM CALL RetrieveElevator(Column4) RETURNING Elevator
   END CASE
END SEQUENCE

SEQUENCE RetrieveElevator(Column)
    WHILE Elevator NOT Found       
        FOR EACH Elevator IN Column Elevators
            IF Floor = ElevatorFloor AND Status IS Stopped THEN              
                RETURN Elevator                                                      
            ELSE IF Floor = ElevatorFloor AND Status IS Idle THEN 
                RETURN Elevator  
            ELSE IF Floor = ElevatorFloor THEN
                RETURN Elevator 

            ELSE IF Floor < ElevatorFloor AND Status IS Stopped THEN
                RETURN Elevator
            ELSE IF Floor < ElevatorFloor AND Status IS Idle THEN
                RETURN Elevator 
            ELSE IF Floor < ElevatorFloor THEN
                RETURN Elevator 
            
            ELSE IF Floor > ElevatorFloor AND Status IS Stopped THEN 
                RETURN Elevator
            ELSE IF Floor > ElevatorFloor AND Status IS Idle THEN
                RETURN Elevator
            ELSE IF Floor > ElevatorFloor THEN 
               RETURN Elevator 
            END IF 
        END FOR    
    END WHILE 
END SEQUENCE

SEQUENCE RequestElevator (Elevator, RequestedFloor)
    ADD RequestedFloor TO ColumnFloorList
     CALL ColumnSortFloorList (ColumnFloorlist, Direction) RETURNING ColumnSortedFloorList       
     SET ColumnFloorList TO ColumnSortedFloorList
     CALL OperateElevator (Elevator)
END SEQUENCE

SEQUENCE ColumnSortFloorList (Floorlist, Direction)
   SORT ColumnFloorList BY Direction THEN RETURN ColumnSortedFloorlist
END SEQUENCE

SEQUENCE OperateElevator (Elevator)    
CALL ShowFloor                              
 WHILE SortedFloorList IS NOT Empty                               
    READ RequestedFloor From SortedFloorList 
     IF ElevatorFloor IS RequestedFloor THEN 
      CALL OpenDoors (Elevator)
    ELSE IF ElevatorFloor > RequestedFloor 
      CALL MoveDown (Elevator, RequestedFloor)
    ELSE IF ElevatorFloor < RequestedFloor
      CALL MoveUp (Elevator, RequestedFloor)
    END IF 
  END WHILE 
  CALL RushHour(Elevator) 
END SEQUENCE 

SEQUENCE MoveUp (Elevator, RequestedFloor)
    REPEAT 
        MoveUp Elevator
        COMPUTE ElevatorFloor = ElevatorFloor + 1 
    UNTIL ElevatorFloor IS RequestedFloor
    CALL OpenDoor
END SEQUENCE

SEQUENCE MoveDown (Elevator, RequestedFloor)
    REPEAT 
        MoveDown Elevator
        COMPUTE ElevatorFloor = ElevatorFloor - 1
    UNTIL ElevatorFloor IS RequestedFloor 
    CALL OpenDoor 
END SEQUENCE

SEQUENCE OpenDoor (Elevator)
    REPEAT 
        OpenDoor 
      INIT Timer TO 15 Seconds 
    UNTIL Door NOT Obstructed 
     CALL DeactivateButton 
     CALL CloseDoor (Elevator)
END SEQUENCE

SEQUENCE CloseDoor (Elevator)
    IF Door IS Closing AND NOT Obstructed AND NOT Overweight 
    THEN
        CALL RequestElevator                                    
    ELSE 
        CALL OpenDoor (Elevator)
    END IF
END SEQUENCE

SEQUENCE Obstructed (Elevator)
   READ Captor FROM Door
   IF Obstructed 
      RETURN TRUE 
   ELSE RETURN FALSE 
   END IF 
END SEQUENCE 

SEQUENCE Overweight (Elevator)
   READ Weight FROM Balance 
   IF Weight > Max Weight THEN
     RETURN TRUE 
   ELSE RETURN FALSE
   END IF 
END SEQUENCE

SEQUENCE ShowFloor (Floor, Direction)               
SHOW ElevatorFloor ON Board 
SHOW Direction ON Board
END SEQUENCE 

SEQUENCE RushHour (Elevator) 
     COMPUTE Middle FROM Column
     COMPUTE MaxFloor FROM Column
     IF 14 > TimeOfDay > 11 THEN 
      CALL RequestElevator (Elevator, Middle Floor)
     IF 20 > TimeOfDay > 16 THEN 
      CALL RequestElevator (Elevator, Max Floor)
     ELSE 
      CALL RequestElevator (Elevator, 1)
END SEQUENCE 

SEQUENCE CallInsideElevator (Elevator, RequestedFloor)  
    CALL ActivateIntButton (Direction, RequestedFloor) 
    CALL RequestElevator (Elevator, RequestedFloor) 
END SEQUENCE

SEQUENCE ActivateIntButton (Elevator, Floor)   
    CALL FindIntButton (Elevator, Floor) RETURNING button
    SET button Active 
END SEQUENCE

SEQUENCE DeactivateIntbutton (Elevator, Floor)   
    CALL FindIntbutton (Elevator, Floor) RETURNING button
    SET button NotActive 
END SEQUENCE

SEQUENCE FindIntbutton (Elevator, Floor) 
    FOR EACH button IN Internalbuttons 
        IF Floor = ButtonFloor AND Elevator = Elevator 
        THEN RETURN button 
        END IF
    END FOR 
END SEQUENCE 

SEQUENCE SubLevelsElevator(Column)
    WHILE Elevator NOT Found 
          FOR EACH Elevator IN Column
            IF Floor = ElevatorFloor AND Status Is Stopped AND ElevatorDirection IS Direction THEN
                    RETURN Elevator
                ELSE IF Status IS Idle AND Floor = ElevatorFloor THEN
                    RETURN Elevator   
                ELSE IF Direction IS GoingUp AND ElevatorDirection IS Direction AND Floor > ElevatorFloor THEN 
                    RETURN Elevator 
                ELSE IF Direction IS GoingDown AND ElevatorDirection IS Direction AND Floor < ElevatorFloor THEN 
                    RETURN Elevator 
            END IF 
            END FOR
            READ Elevator with shortest floor list from Elevators
            RETURN Elevator
    END WHILE
END SEQUENCE

